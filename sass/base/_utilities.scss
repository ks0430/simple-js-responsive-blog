// Spacing create
// depend on resposive & none-responsive
@mixin spacingCreate($bkSize) {
  @each $prefix,$abbrev in (margin: m, padding: p) {
    @each $level, $size in $spacingMap {
      // All
      .u-#{$abbrev}-#{$level}#{$bkSize} {
        #{$prefix}: $size;
      }
      // Bottom
      .u-#{$abbrev}b-#{$level}#{$bkSize},
      .u-#{$abbrev}y-#{$level}#{$bkSize} {
        #{$prefix}-bottom: $size;
      }
      // Top
      .u-#{$abbrev}t-#{$level}#{$bkSize},
      .u-#{$abbrev}y-#{$level}#{$bkSize} {
        #{$prefix}-top: $size;
      }
      // Left
      .u-#{$abbrev}l-#{$level}#{$bkSize},
      .u-#{$abbrev}x-#{$level}#{$bkSize} {
        #{$prefix}-left: $size;
      }
      // Right
      .u-#{$abbrev}r-#{$level}#{$bkSize},
      .u-#{$abbrev}x-#{$level}#{$bkSize} {
        #{$prefix}-right: $size;
      }
    }
  }
}

// -----------Auto create margin & padding utilities-------------
// Ref: bootstrap 4
// $prefix: margin or padding
// $abbrev: m or p
// level: 0 - 6
// size: spacing times coefficient, the size of margin or padding
// Example:
// u-mb-2 / 
@each $breakPoint, $bkSize in $breakPoints {
  // If breakpoint is current 
  @if $breakPoint == null {
    @include spacingCreate($bkSize);
  } @else {
    @include respond($breakPoint){
      @include spacingCreate(--#{$bkSize});
    }
  }
}

.u-m-auto {
  margin: auto;
}
.u-mt-auto {
  margin-top: auto;
}
.u-mb-auto {
  margin-bottom: auto;
}
.u-ml-auto {
  margin-left: auto;
}
.u-mr-auto {
  margin-right: auto;
}
.u-mx-auto {
  margin-left: auto;
  margin-right: auto;
}
.u-my-auto {
  margin-top: auto;
  margin-bottom: auto;
}

